# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - master
  tags:
    include:
      - v*
    exclude:
      - v*-beta-*

variables:
  isReleaseTag: ${{ startsWith(variables['Build.SourceBranch'], 'refs/tags/v') }}
  buildConfiguration: 'Release'

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  fetchDepth: 1

- powershell: 'echo "##vso[task.setvariable variable=PackageVersion]$($env:Build_SourceBranchName.Substring(1))"'
  displayName: 'PowerShell Script'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    feedsToUse: 'select'
    versioningScheme: 'off'
    arguments: '-c $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Unit Test
  inputs:
    command: 'test'
    projects: '**/*.Tests/*.csproj'
    feedsToUse: 'select'
    versioningScheme: 'off'
    publishTestResults: true

- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    nobuild: true
    packagesToPack: 'src/**/*.csproj'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'PackageVersion'
    verbosityPack: 'Normal'
  condition: and(succeeded(), eq(variables['isReleaseTag'], 'true'))

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  condition: and(succeeded(), eq(variables['isReleaseTag'], 'true'))

- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'GitHub'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'gitTag'
    tag: 'v$(MajorVersion).$(MinorVersion).$(PatchVersion)$(Suffix)$(Build.BuildNumber)'
    releaseNotesSource: 'inline'
    isDraft: true
    addChangeLog: false
  condition: and(succeeded(), eq(variables['isReleaseTag'], 'false'))